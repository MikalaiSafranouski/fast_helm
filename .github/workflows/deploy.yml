name: Deploy to AWS EKS

on:
  push:
    branches: [ main ]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

env:
  AWS_REGION: eu-north-1                         # set this to your preferred AWS region, e.g. us-west-1
  ECR_REPOSITORY: fast-helm                      # set this to your Amazon ECR repository name
  EKS_CLUSTER: fast-helm-cluster                 # set this to your Amazon EKS cluster name
  CONTAINER_NAME: app                            # set this to the name of the container in the

jobs:

  deploy:
    name: Build image
    runs-on: ubuntu-latest
    needs: [run_tests]

    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Install kubectl
      uses: azure/setup-kubectl@v1
      with:
        version: 'v1.21.3'
      id: install

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v1
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: eu-north-1

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v1

    - name: Build, tag, and push image to Amazon ECR
      env:
        ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        ECR_REPOSITORY: messenger-service-repo
        IMAGE_TAG: ${{ github.sha }}
      run: |
        docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG -t $ECR_REGISTRY/$ECR_REPOSITORY:latest .
        docker push -a $ECR_REGISTRY/$ECR_REPOSITORY

#    - name: Update kube config
#      run: aws eks update-kubeconfig --name k8s-cluster --region eu-north-1

    - name: Deploy image to Amazon EKS
      run: |
         echo "START DEPLOY PROCESS !!"
#        kubectl apply -f eks/aws-auth.yaml
#        kubectl apply -f eks/deployment.yaml
#        kubectl apply -f eks/service.yaml
#        kubectl apply -f eks/issuer.yaml
#        kubectl apply -f eks/ingress-nginx.yaml
#        kubectl apply -f eks/ingress-http.yaml
#        kubectl apply -f eks/ingress-grpc.yaml
